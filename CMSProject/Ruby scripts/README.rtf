{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green116\blue0;\red14\green14\blue255;\red170\green13\blue145;
\red28\green0\blue207;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf2 \CocoaLigature0 \
\
ig2fbx.rb\cf0 \
\cf2 #\cf0 \
\cf2 #  <{\field{\*\fldinst{HYPERLINK "mailto:olykken@gmail.com"}}{\fldrslt \cf3 olykken@gmail.com}}>\cf0 \
\cf2 #  based on ig2skp.rb by\cf0 \
\cf2 #  Thomas McCauley <{\field{\*\fldinst{HYPERLINK "mailto:thomas.mccauley@cern.ch"}}{\fldrslt \cf3 thomas.mccauley@cern.ch}}>\cf0 \
\cf2 #\cf0 \
\cf2 #  Ruby script designed to be imported into SketchUp\cf0 \
\cf2 #  You specify a directory containing CMS JSON event files in the ig format\cf0 \
\cf2 #  Each file is processed in turn, producing a 3D event display exported as fbx files,\cf0 \
\cf2 #  with xml files that contain event info\cf0 \
\cf2 #\cf0 \
\cf2 #  The output has separate pairs of .fbx and .xml files for each of the following physics objects:\cf0 \
\cf2 #  one pair for the calo part of the event (xml contains nothing FIX THIS)\cf0 \
\cf2 #  one pair for each muon (xml contains pt, eta, phi, and charge)\cf0 \
\cf2 #  one pair for each electron (xml contains pt, eta, phi, and charge)\cf0 \
\cf2 #  one pair for each additional track (xml contains pt, eta, phi, and charge)\cf0 \
\cf2 #\cf0 \
\cf2 #  The output files are suitable for importing in Unity3D for, e.g. use with Oculus Rift\cf0 \
\cf2 #\cf0 \
\
\cf4 requires\cf0  \cf5 'bezier.rb'\
\
The script should be run directly inside Sketchup!\
\
\cf0 \
\
}